<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.scijava</groupId>
        <artifactId>pom-scijava</artifactId>
        <version>30.0.0</version>
        <relativePath/>
    </parent>

    <groupId>com.bigdistributor</groupId>
    <artifactId>BigDistributor-pom</artifactId>
    <version>0.3</version>
    <packaging>pom</packaging>

    <url>https://github.com/BigDistributor</url>
    <inceptionYear>2020</inceptionYear>

    <organization>
        <name>Preibisch Lab</name>
        <url>https://preibischlab.mdc-berlin.de/</url>
    </organization>
    <licenses>
        <license>
            <name>Simplified BSD License</name>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <developers>
        <developer>
            <id>mzouink</id>
            <name>Marwan Zouinkhi</name>
            <url>https://imagej.net/User:mzouink</url>
            <roles>
                <role>founder</role>
                <role>lead</role>
                <role>developer</role>
                <role>debugger</role>
                <role>reviewer</role>
                <role>support</role>
                <role>maintainer</role>
            </roles>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>None</name>
        </contributor>
    </contributors>

    <mailingLists>
        <mailingList>
            <name>Image.sc Forum</name>
            <archive>None</archive>
        </mailingList>
    </mailingLists>

    <scm>
        <connection>scm:git:git://github.com/BigDistributor/BD_DataExchange</connection>
        <developerConnection>scm:git:git@github.com:BigDistributor/BD_DataExchange</developerConnection>
        <tag>HEAD</tag>
        <url>https://github.com/BigDistributor/BD_DataExchange</url>
    </scm>
    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/BigDistributor/BD_DataExchange/issues</url>
    </issueManagement>
    <ciManagement>
        <system>Travis CI</system>
        <url>https://travis-ci.org/BigDistributor/BD_DataExchange</url>
    </ciManagement>

    <properties>

        <revision>0.3-SNAPSHOT</revision>
        <enforcer.skip>true</enforcer.skip>
        <license.licenseName>bsd_2</license.licenseName>
        <license.projectName>BigDistributor</license.projectName>
        <license.organizationName>Preibisch Lab</license.organizationName>
        <license.copyrightOwners>Marwan Zouinkhi, Stephan Preibisch</license.copyrightOwners>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <imglib2-cache.version>1.0.0-beta-16</imglib2-cache.version>
        <!--        <imglib2.version>5.10.0</imglib2.version>-->
        <kafka-clients.version>2.3.0</kafka-clients.version>
        <amqp-client.version>5.10.0</amqp-client.version>
        <scijava-common.version>2.83.3</scijava-common.version>
        <gson.version>2.8.5</gson.version>
        <picocli.version>4.6.1</picocli.version>
        <!--        <imglib2-ij.version>2.0.0-beta6</imglib2-ij.version>-->
        <multiview-reconstruction.version>0.10.5-SNAPSHOT</multiview-reconstruction.version>
        <BigStitcher.version>0.7.0</BigStitcher.version>
        <maven-invoker.version>3.0.1</maven-invoker.version>
        <maven-model.version>3.6.3</maven-model.version>
        <junit.version>4.13</junit.version>
        <commons-lang.version>2.6</commons-lang.version>
        <guava.version>23.0</guava.version>
        <reflections.version>0.9.12</reflections.version>

        <n5-aws-s3.version>3.1.2</n5-aws-s3.version>
        <n5.version>2.2.1</n5.version>
        <spark-core_2.11.version>2.4.7</spark-core_2.11.version>
        <aws-java-sdk-sqs.version>1.11.950</aws-java-sdk-sqs.version>
        <aws-java-sdk-lambda.version>1.11.950</aws-java-sdk-lambda.version>
        <!--        <aws-java-sdk-s3.version>1.11.796</aws-java-sdk-s3.version>-->

        <jdom2.version>2.0.6</jdom2.version>
        <aws-java-sdk-s3.version>1.11.969</aws-java-sdk-s3.version>
        <!--        <jackson.version>2.9.6</jackson.version>-->
        <jackson-databind.version>2.6.5</jackson-databind.version>
        <httpclient.version>4.5.9</httpclient.version>
        <commons-logging.version>1.2</commons-logging.version>
        <log4j.version>1.2.17</log4j.version>
        <netty.version>4.1.30.Final</netty.version>
    </properties>
    <repositories>

        <repository>
            <id>saalfeld-lab-maven-repo</id>
            <url>https://saalfeldlab.github.io/maven</url>
        </repository>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>scijava.public</id>
            <url>https://maven.scijava.org/content/groups/public</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- ImgLib2 dependencies -->
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-cache</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-algorithm</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-algorithm-fft</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-algorithm-gpl</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-ij</artifactId>
        </dependency>
        <dependency>
            <groupId>net.imglib2</groupId>
            <artifactId>imglib2-realtransform</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/io.netty/netty-all -->
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>${netty.version}</version>
        </dependency>
        <!--        For Annotation indexation       -->
        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.reflections</groupId>
            <artifactId>reflections</artifactId>
            <version>${reflections.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/log4j/log4j -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <version>${kafka-clients.version}</version>
        </dependency>

        <dependency>
            <groupId>com.rabbitmq</groupId>
            <artifactId>amqp-client</artifactId>
            <version>${amqp-client.version}</version>
        </dependency>
        <dependency>
            <groupId>org.scijava</groupId>
            <artifactId>scijava-common</artifactId>
            <version>${scijava-common.version}</version>
        </dependency>

        <!--        Serializing      -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!--        Headless        -->
        <dependency>
            <groupId>info.picocli</groupId>
            <artifactId>picocli</artifactId>
            <version>${picocli.version}</version>
        </dependency>
        <!--        Clustering      -->
        <!--        <dependency>-->
        <!--            <groupId>net.preibisch</groupId>-->
        <!--            <artifactId>multiview-reconstruction</artifactId>-->
        <!--            <version>${multiview-reconstruction.version}</version>-->
        <!--        </dependency>-->
        <dependency>
            <groupId>org.apache.maven.shared</groupId>
            <artifactId>maven-invoker</artifactId>
            <version>${maven-invoker.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-model</artifactId>
            <version>${maven-model.version}</version>
        </dependency>

        <!--        unit test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>copy-resources01</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/classes</outputDirectory>
                            <encoding>UTF-8</encoding>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src</directory>
                                    <includes>
                                        <include>**/*.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-resources02</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/build/lib</outputDirectory>
                            <encoding>UTF-8</encoding>
                            <resources>
                                <resource>
                                    <directory>${basedir}/target/</directory>
                                    <include>*.jar</include>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>